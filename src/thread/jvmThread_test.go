/*
 * Jacobin VM - A Java virtual machine
 * Copyright (c) 2022 by Andrew Binstock. All rights reserved.
 * Licensed under Mozilla Public License 2.0 (MPL 2.0)
 */

package thread

import (
	"container/list"
	"jacobin/globals"
	"testing"
)

func TestCreateThread(t *testing.T) {
	et := CreateThread()
	if et.ID != 0 ||
		et.PC != 0 ||
		et.Trace != false {
		t.Error("Invalid thread generated by CreateThread()")
	}
}

func TestAddThreadToTable(t *testing.T) {
	tbl := globals.ThreadList{}
	tbl.ThreadsList = list.New()
	retVal := 0

	for i := 0; i < 10; i++ {
		th := CreateThread()
		retVal = AddThreadToTable(&th, &tbl)
	}

	tblLen := tbl.ThreadsList.Len()
	if tblLen != 10 {
		t.Errorf("Expected thread table to have 10 elements; got %d",
			tblLen)
	}

	if retVal != 9 {
		t.Errorf("Expected last inserted thread to be #9; got %d", retVal)
	}

}
